1) I used 3 extra days to complete this assignment. I was not using the skeleton initially, thus producing unwanted result on teh gardescoep. 

2) PS C:\Users\nehav\workspace\cs310\pa2_1> java DegreesOfSeparationBFS src/movies.txt "/" "Bacon, Kevin", "Kidman, Nicole"
  0        1
  1     1023
  2    49593
  3    37680
  4     1459
  5      127
Inf      613
Kidman, Nicole has a Bacon number of 2
Kidman, Nicole was in "My Life (1993 I)" with de Sosa, Ruth
de Sosa, Ruth was in "Planes, Trains & Automobiles (1987)" with Bacon, Kevin

3) My version:

PS C:\Users\nehav\workspace\cs310\pa2> java DijkstraTieSP src/tinyEWD2.txt 0
0 to 0 (0.00)
0 to 1 (7.32)  0->4  3.00   4->5  4.00   5->1  0.32
0 to 2 (8.00)  0->2  8.00
0 to 3 (7.61)  0->4  3.00   4->5  4.00   5->1  0.32   1->3  0.29
0 to 4 (3.00)  0->4  3.00
0 to 5 (7.00)  0->4  3.00   4->5  4.00
0 to 6 (8.13)  0->4  3.00   4->5  4.00   5->1  0.32   1->3  0.29   3->6  0.52
0 to 7 (9.00)  0->2  8.00   2->7  1.00

Original:

PS C:\Users\nehav\workspace\cs310\pa2> java Dijkstra src/tinyEWD2.txt 0
0 to 0 (0.00)
0 to 1 (7.32)  0->4  3.00   4->5  4.00   5->1  0.32
0 to 2 (8.00)  0->2  8.00
0 to 3 (7.61)  0->4  3.00   4->5  4.00   5->1  0.32   1->3  0.29
0 to 4 (3.00)  0->4  3.00
0 to 5 (7.00)  0->4  3.00   4->5  4.00
0 to 6 (8.13)  0->4  3.00   4->5  4.00   5->1  0.32   1->3  0.29   3->6  0.52
0 to 7 (9.00)  0->4  3.00   4->5  4.00   5->7  2.00

The difference is in the path : 0->7
#TieBreaker - 0 to 7 (9.00)  0->2  8.00   2->7  1.00 (weight = 9)
#Dijkstra - 0 to 7 (9.00)  0->4  3.00   4->5  4.00   5->7  2.00 (weight = 9)

Dijkstra is the algorithm that finds the shortes path on the edge weighted graph provided that the weights are psoitive. 
That is, if there are two path from the source to a vertex say w - then it finds the path which has the shortest weight by relaxing the edge. 
However, it does not relax the edge when the weights are smaller or equal than the new path. 

In TieBreaker version,  if two path to a vertex from the source has the same weights, then we go by the number of edges. If the nukmber if edges is less than
what we already have, then we relax the edge otherwise we don't. 

In this example - the weight from 0-> 7 is 9 in both the case. Thus, in the Dijkstra's algorithm, the edge was not relaxed. 
However, in the TieBreaker case, because the weights of both the path is same, therefore, we checked the number of edges. 
It turns out that the number of edges were less in the other path and hence we relaxed the edge. Thus, we see the difference in the outputs. 




